initSidebarItems({"enum":[["Event","The `Event` enum allows for easy pattern matching on events."],["LogLevel","The `LogLevel` defines how something should be logged for chunkwm. See the chunkwm readme."],["Subscription","The `Subscription` enum is used to subscribe to chunkwm events."],["WindowFlag","The flags on a `Window`."]],"struct":[["API","The `API` struct is a raw type (i.e. the same as used in C code), and contains methods for creating, finding, and getting `CVar`s."],["Application","The `Application` struct."],["CVar","The `CVar` struct allows you to easily create a handle to `CVars`, that might be updated. You can use all types that implement `Display` and `FromStr` as value type for the `CVar`. You can therefore easily implement your own `CVar` compatible types."],["NumericBool","The `NumericBool` is often used in a chunkwm config. It is a boolean type that is either 0 or 1 (false or true respectively). This struct allows you to create a `CVar` that is a numeric bool, and easily get its value."],["Payload","The `Payload` struct."],["Window","The `Window` struct."]],"trait":[["HandleEvent","The `HandleEvent` trait should be implemented on your Plugin struct."]],"type":[["DisplayID","The display identifier."]]});